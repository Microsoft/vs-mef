Microsoft.VisualStudio.Composition.ExportProvider.GetExportedValues(System.Type type, string contractName) -> System.Collections.Generic.IEnumerable<object>
Microsoft.VisualStudio.Composition.ExportProvider.GetExports(System.Type type, System.Type metadataViewType, string contractName) -> System.Collections.Generic.IEnumerable<System.Lazy<object, object>>
Microsoft.VisualStudio.Composition.ExportProvider.ReleaseExport(Microsoft.VisualStudio.Composition.Export export) -> void
Microsoft.VisualStudio.Composition.ExportProvider.ReleaseExport<T>(System.Lazy<T> export) -> void
Microsoft.VisualStudio.Composition.ExportProvider.ReleaseExports(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.Composition.Export> exports) -> void
Microsoft.VisualStudio.Composition.ExportProvider.ReleaseExports<T, TMetadataView>(System.Collections.Generic.IEnumerable<System.Lazy<T, TMetadataView>> exports) -> void
Microsoft.VisualStudio.Composition.ExportProvider.ReleaseExports<T>(System.Collections.Generic.IEnumerable<System.Lazy<T>> exports) -> void